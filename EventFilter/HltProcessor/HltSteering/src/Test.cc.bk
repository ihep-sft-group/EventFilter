#include "SniperKernel/AlgFactory.h" 
#include "SniperKernel/AlgBase.h"
#include "Test.h"
#include "TestSvc.h"
#include "HltConfigSvc.h"
DECLARE_ALGORITHM(Test);
Test::Test(const std::string& name)
    : AlgBase(name)    
{
    m_count = 0;
    declProp("VarString", m_string);
    declProp("VectorInt", m_vector_int);
    declProp("MapStrInt", m_str_int);
}
Test::~Test()
{
}
bool
Test::initialize()
{   
  SniperPtr<TestSvc> hltconfigsvc("TestSvc");
  //SniperPtr<HltConfigSvc> hltconfigsvc("HltConfigSvc");  
  if( hltconfigsvc.invalid()) {
    LogError << "Unable to locate HltConfigSvc" << std::endl;
    return false;
  }
  int count=hltconfigsvc->getCount();
  LogInfo << "TestSvc Count is: "<<count<< std::endl;

    LogInfo << " initialized Test " << std::endl;
    return true;
}
bool
Test::execute()
{
    ++m_count;
    LogInfo << "Hello: count: " << m_count << std::endl;
    if(m_count>10) return false;
    return true;
}
bool
Test::finalize()
{
    LogInfo << " finalized successfully" << std::endl;
    return true;
}
